variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - Build
  - Publish

.build: &build |
  mkdir pkgs

  docker run -v $PWD:/build eu.gcr.io/principal-oxide-204416/c-cross-compile sh -c "cd /build && \
  make && \
  cd android && \
  echo 'ndk.dir=/opt/android-ndk' > local.properties && \
  ./gradlew assemble && \
  cd /build/ && \
  for arch in arm64-v8a armeabi-v7a x86 x86_64; do \
    mkdir -p \"/build/self-olm-android-\$arch/include/self_olm\" && \
    mv \"android/olm-sdk/src/main/libs/\$arch/libself_olm.so\" \"android/olm-sdk/src/main/libs/\$arch/libsodium.so\" \"/build/self-olm-android-\$arch/\" && \
    cp include/self_olm/olm.h include/self_olm/outbound_group_session.h include/self_olm/inbound_group_session.h include/self_olm/pk.h include/self_olm/sas.h \"/build/self-olm-android-\$arch/include/self_olm\" && \
    tar -zcvf \"/build/pkgs/libself-olm-${version}-android-\$arch.tar.gz\" \"self-olm-android-\$arch\"; \
  done"

  docker run -v $PWD:/build eu.gcr.io/principal-oxide-204416/fpm sh -c "apt-get update && \
  apt-get install -y libsodium-dev rpm && \
  cd /build && \
  mkdir -p self-olm-linux-x86_64/include/self_olm/ && \
  cp include/self_olm/olm.h include/self_olm/outbound_group_session.h include/self_olm/inbound_group_session.h include/self_olm/pk.h include/self_olm/sas.h /build/self-olm-linux-x86_64/include/self_olm && \
  cp ./build/libself_olm.so ./build/libself_olm.so.3 ./build/libself_olm.so.3.1.4 /build/self-olm-linux-x86_64 && \
  tar -zcvf /build/pkgs/libself-olm-${version}-linux-x86_64.tar.gz self-olm-linux-x86_64 && \
  fpm -s dir -t deb -n libself-olm -v ${version} -p pkgs --deb-no-default-config-files -d libsodium-dev ./build/libself_olm.so=/usr/lib/ ./build/libself_olm.so.3=/usr/lib/ ./build/libself_olm.so.3.1.4=/usr/lib/ ./include/self_olm/=/usr/include/self_olm && \
  fpm -s dir -t rpm -n libself-olm -v ${version} -p pkgs -d libsodium-devel ./build/libself_olm.so=/usr/lib/ ./build/libself_olm.so.3=/usr/lib/ ./build/libself_olm.so.3.1.4=/usr/lib/ ./include/self_olm/=/usr/include/self_olm"


.publish: &publish |
  echo $GCP_SA_CI | base64 -d > /tmp/gcp-sa-ci.json
  gcloud auth activate-service-account --key-file /tmp/gcp-sa-ci.json
  gsutil cp pkgs/libself-olm* gs://download.joinself.com/olm

before_script:
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

build:
  stage: Build
  image: eu.gcr.io/principal-oxide-204416/deploy
  services:
    - docker:19.03.2-dind
  script:
    - version=$(${SCRIPTS_DIR}/git-new-version)
    - ${SCRIPTS_DIR}/docker-registry-setup
    - *build
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/pkgs
  only:
    - branches

publish:
  stage: Publish
  image: eu.gcr.io/principal-oxide-204416/deploy
  script:
    - ${SCRIPTS_DIR}/git-setup
    - version=$(${SCRIPTS_DIR}/git-new-version)
    - ${SCRIPTS_DIR}/git-release -v ${version}
    - ${SCRIPTS_DIR}/slack-release-notification -n joinself -v ${version}
    - *publish
  only:
    - master

