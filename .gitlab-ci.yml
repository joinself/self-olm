variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - Build
  - Publish

build:
  stage: Build
  image: docker:stable-git
  services:
    - docker:19.03.2-dind
  script:
    - build
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/pkgs
  only:
    - branches

# lock branch to only master
publish:
  stage: Publish
  image: aldgateventuresbot/deploy
  script:
    - ls -lah
  only:
    - branches

.functions: &functions |
  set -x

  function new_version {
    commitDesc=$CI_COMMIT_DESCRIPTION

    if [[ $(git tag) == "" ]]; then
      newVersion="0.1.0"
    else
      currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')

      case $commitDesc in
        *+bump-major*)
          newVersion=$(/usr/local/bin/semver bump major $currentVersion)
          ;;
        *+bump-minor*)
          newVersion=$(/usr/local/bin/semver bump minor $currentVersion)
          ;;
        *)
          newVersion=$(/usr/local/bin/semver bump patch $currentVersion)
          ;;
      esac
    fi

    echo "-------------------------- $newVersion - func ----------------------------"
    echo $newVersion
  }



  function build() {
    newVersion=$(new_version)
    #test123
    echo "------------------------- ${newVersion} - build --------------------------------------"

    #currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
    mkdir pkgs
    docker run -v $PWD:/build aldgateventuresbot/fpm sh -c "apt-get update && apt-get install -y libsodium-dev rpm && cd /build && make && fpm -s dir -t deb -n libselfid-olm -v ${newVersion} -p pkgs --deb-no-default-config-files -d libsodium-dev ./build/libolm.so=/usr/lib/ ./build/libolm.so.3=/usr/lib/ ./build/libolm.so.3.1.4=/usr/lib/ ./include/olm/=/usr/include/olm && fpm -s dir -t rpm -n libselfid-olm -v ${newVersion} -p pkgs -d libsodium-devel ./build/libolm.so=/usr/lib/ ./build/libolm.so.3=/usr/lib/ ./build/libolm.so.3.1.4=/usr/lib/ ./include/olm/=/usr/include/olm"
    # remove this
    ls -lah
  }

  function setup_git() {
    git config --global user.name self-ci-bot
    git config --global user.email ops@selfid.net
    git config --global url."https://${GITHUB_TOKEN}:@github.com".insteadOf "https://github.com"
  }

  function release() {
    newVersion=$(new_version)

    echo "========================== ${newVersion} ====================================="
    # commitDesc=$CI_COMMIT_DESCRIPTION

    # if [[ $(git tag) == "" ]]; then
    #   newVersion="0.1.0"
    # else
    #   currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')

    #   case $commitDesc in
    #     *+bump-major*)
    #       newVersion=$(semver bump major $currentVersion)
    #       ;;
    #     *+bump-minor*)
    #       newVersion=$(semver bump minor $currentVersion)
    #       ;;
    #     *)
    #       newVersion=$(semver bump patch $currentVersion)
    #       ;;
    #   esac
    # fi

    setup_git
    git remote set-url origin https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH}

    git_release $newVersion
    slack_notify $newVersion
  }

  function git_release() {
    version=$1
    git tag -a $version -m "$version"
    git push origin $version
  }

  function publish() {
    #currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
    echo $GCP_SA_CI | base64 -d > /tmp/gcp-sa-ci.json
    gcloud auth activate-service-account --key-file /tmp/gcp-sa-ci.json
    gsutil cp pkgs/libselfid-olm* gs://download.selfid.net/olm
  }

  function slack_notify() {
    version=$1
    slack chat send "New release <https://github.com/${CI_PROJECT_PATH}|${CI_PROJECT_NAME}> <https://github.com/${CI_PROJECT_PATH}/commits/${version}|${version}>" '#ci'
  }

before_script:
  - *functions
