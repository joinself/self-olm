variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - Build

build:
  stage: Build
  image: docker:stable-git
  services:
    - docker:19.03.2-dind
  script:
    - build
  only:
    - branches

.functions: &functions |
  set -x

  function build() {
    docker run -v $PWD:/build aldgateventuresbot/fpm sh -c "apt-get update && apt-get install -y libsodium-dev rpm && cd /build && fpm -s dir -t deb -n libselfid-olm -v 0.0.1 --deb-no-default-config-files -d libsodium-dev ./build/libolm.so=/usr/lib/ ./build/libolm.so.3=/usr/lib/ ./build/libolm.so.3.1.4=/usr/lib/ ./include/olm/=/usr/include/olm && -s dir -t rpm -n libselfid-olm -v 0.0.1 -d libsodium-devel ./build/libolm.so=/usr/lib/ ./build/libolm.so.3=/usr/lib/ ./build/libolm.so.3.1.4=/usr/lib/ ./include/olm/=/usr/include/olm"
    ls -lah
  }

  function setup_git() {
    git config --global user.name self-ci-bot
    git config --global user.email ops@selfid.net
    git config --global url."https://${GITHUB_TOKEN}:@github.com".insteadOf "https://github.com"
  }

  function release() {
    commitDesc=$CI_COMMIT_DESCRIPTION

    if [[ $(git tag) == "" ]]; then
      newVersion="0.1.0"
    else
      currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')

      case $commitDesc in
        *+bump-major*)
          newVersion=$(semver bump major $currentVersion)
          ;;
        *+bump-minor*)
          newVersion=$(semver bump minor $currentVersion)
          ;;
        *)
          newVersion=$(semver bump patch $currentVersion)
          ;;
      esac
    fi

    setup_git
    git remote set-url origin https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH}

    git_release $newVersion
    slack_notify $newVersion
  }

  function git_release() {
    version=$1
    git tag -a $version -m "$version"
    git push origin $version
  }

  function deploy() {
    env=$1
    currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
    git clone https://${GITHUB_TOKEN}:@github.com/aldgate-ventures/self-platform.git
    cd self-platform/helm/releases/${env}
    setup_kubectl ${env}
    service=${CI_PROJECT_TITLE#*-}
    helm upgrade ${service} -f ${service}-values.yaml --set image.tag=${currentVersion} ../../charts/${service}/. --kube-context ${env}
  }

  function slack_notify() {
    version=$1
    slack chat send "New release <https://github.com/${CI_PROJECT_PATH}|${CI_PROJECT_NAME}> <https://github.com/${CI_PROJECT_PATH}/commits/${version}|${version}>" '#ci'
  }

before_script:
  - *functions
