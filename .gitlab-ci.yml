variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - Build
  - Publish

build:
  stage: Build
  image: aldgateventuresbot/deploy
  services:
    - docker:19.03.2-dind
  script:
    - build
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/pkgs
  only:
    - branches

publish:
  stage: Publish
  image: aldgateventuresbot/deploy
  script:
    - release
    - publish
  only:
    - master

.functions: &functions |
  set -x

  function new_version {
    local currentVersion
    local newVersion
    local commitDesc=$CI_COMMIT_DESCRIPTION

    if [[ $(git tag) == "" ]]; then
      newVersion="0.1.0"
    else
      currentVersion=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')

      case $commitDesc in
        *+bump-major*)
          newVersion=$(/usr/local/bin/semver bump major $currentVersion)
          ;;
        *+bump-minor*)
          newVersion=$(/usr/local/bin/semver bump minor $currentVersion)
          ;;
        *)
          newVersion=$(/usr/local/bin/semver bump patch $currentVersion)
          ;;
      esac
    fi

    echo $newVersion
  }

  function build() {
    newVersion=$(new_version)
    mkdir pkgs
    docker run -v $PWD:/build aldgateventuresbot/c-crosscompile sh -c "make && cd android && echo 'ndk.dir=/opt/android-ndk' > local.properties && ./gradlew assemble && cd /build/ && mkdir -p /tmp/self-olm-android-arm64-v8a/include/self_olm && mv android/olm-sdk/src/main/libs/arm64-v8a/libolm.so /tmp/self-olm-android-arm64-v8a && cp include/self_olm/olm.h include/self_olm/outbound_group_session.h include/self_olm/inbound_group_session.h include/self_olm/pk.h include/self_olm/sas.h /tmp/self-olm-android-arm64-v8a/include/self_olm && tar -zcvf /build/pkgs/self-olm-${newVersion}-android-arm64-v8a.tar.gz /tmp/self-olm-android-arm64-v8a && mkdir -p /tmp/self-olm-android-armeabi-v7a/include/self_olm && mv android/olm-sdk/src/main/libs/armeabi-v7a/libolm.so /tmp/self-olm-android-armeabi-v7a && cp include/self_olm/olm.h include/self_olm/outbound_group_session.h include/self_olm/inbound_group_session.h include/self_olm/pk.h include/self_olm/sas.h /tmp/self-olm-android-armeabi-v7a/include/self_olm && tar -zcvf /build/pkgs/self-olm-${newVersion}-android-armeabi-v7a.tar.gz /tmp/self-olm-android-armeabi-v7a && mkdir -p /tmp/self-olm-android-x86/include/self_olm && mv android/olm-sdk/src/main/libs/x86/libolm.so /tmp/self-olm-android-x86 && cp include/self_olm/olm.h include/self_olm/outbound_group_session.h include/self_olm/inbound_group_session.h include/self_olm/pk.h include/self_olm/sas.h /tmp/self-olm-android-x86/include/self_olm && tar -zcvf /build/pkgs/self-olm-${newVersion}-android-x86.tar.gz /tmp/self-olm-android-x86 && mkdir -p /tmp/self-olm-android-x86/include/self_olm && mv android/olm-sdk/src/main/libs/x86_64/libolm.so /tmp/self-olm-android-x86_64 && cp include/self_olm/olm.h include/self_olm/outbound_group_session.h include/self_olm/inbound_group_session.h include/self_olm/pk.h include/self_olm/sas.h /tmp/self-olm-android-x86_64/include/self_olm && tar -zcvf /build/pkgs/self-olm-${newVersion}-android-x86_64.tar.gz /tmp/self-olm-android-x86_64"
    docker run -v $PWD:/build aldgateventuresbot/fpm sh -c "apt-get update && apt-get install -y libsodium-dev rpm && cd /build && fpm -s dir -t deb -n libselfid-olm -v ${newVersion} -p pkgs --deb-no-default-config-files -d libsodium-dev ./build/libself_olm.so=/usr/lib/ ./build/libself_olm.so.3=/usr/lib/ ./build/libself_olm.so.3.1.4=/usr/lib/ ./include/olm/=/usr/include/self_olm && fpm -s dir -t rpm -n libselfid-olm -v ${newVersion} -p pkgs -d libsodium-devel ./build/libself_olm.so=/usr/lib/ ./build/libself_olm.so.3=/usr/lib/ ./build/libself_olm.so.3.1.4=/usr/lib/ ./include/olm/=/usr/include/self_olm"
  }

  function setup_git() {
    git config --global user.name self-ci-bot
    git config --global user.email ops@selfid.net
    git config --global url."https://${GITHUB_TOKEN}:@github.com".insteadOf "https://github.com"
  }

  function release() {
    newVersion=$(new_version)
    setup_git
    git remote set-url origin https://${GITHUB_TOKEN}:@github.com/${CI_PROJECT_PATH}
    git_release $newVersion
    slack_notify $newVersion
  }

  function git_release() {
    version=$1
    git tag -a $version -m "$version"
    git push origin $version
  }

  function publish() {
    echo $GCP_SA_CI | base64 -d > /tmp/gcp-sa-ci.json
    gcloud auth activate-service-account --key-file /tmp/gcp-sa-ci.json
    gsutil cp pkgs/libselfid-olm* gs://download.selfid.net/olm
  }

  function slack_notify() {
    version=$1
    slack chat send "New release <https://github.com/${CI_PROJECT_PATH}|${CI_PROJECT_NAME}> <https://github.com/${CI_PROJECT_PATH}/commits/${version}|${version}>" '#ci'
  }

before_script:
  - *functions
